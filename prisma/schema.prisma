datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int      @id @default(autoincrement())
  name           String
  email          String   @unique
  role           String
  password       String
  phoneNumber    String   @unique
  specialization String?
  experience     Int?
  license        String?
  verified       Boolean  @default(false)
  createdAt      DateTime @default(now())

  doctorProfile  DoctorProfile?
  patientProfile Patient?


   patientAppointments Appointment[] @relation("PatientAppointments")
  doctorAppointments  Appointment[] @relation("DoctorAppointments")
}

model DoctorProfile {
  id            Int      @id @default(autoincrement())
  userId        Int      @unique
  user          User     @relation(fields: [userId], references: [id])
  verified      Boolean  @default(false)
  onlinePrice   Int?
  available     Boolean  @default(true)
  bio           String?
  offline       Boolean  @default(false)
  clinicName    String?
  clinicAddress String?
  offlinePrice  Int?
  createdAt     DateTime @default(now())
}

model Patient {
  id         Int      @id @default(autoincrement())
  userId     Int      @unique
  user       User     @relation(fields: [userId], references: [id])
  height     Int
  weight     Float
  gender     String
  age        Int
  bloodGroup String?
  createdAt  DateTime @default(now())
}
model Appointment {
  id              Int               @id @default(autoincrement())
  patientId       Int
  doctorId        Int
  appointmentDate DateTime?         
  appointmentTime DateTime?
  mode            ConsultationMode?  // Yeh hona chahiye
  reason          String?
  status          AppointmentStatus @default(PENDING)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  patient         User              @relation("PatientAppointments", fields: [patientId], references: [id])
  doctor          User              @relation("DoctorAppointments", fields: [doctorId], references: [id])
}

enum ConsultationMode {
  OFFLINE
  ONLINE
}

enum AppointmentStatus {
  PENDING
  ACCEPTED
  REJECTED
}
